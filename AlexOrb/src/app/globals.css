@tailwind base;
@tailwind components;
@tailwind utilities;


/* Variáveis Globais */
:root {
  --border-color: linear-gradient(-45deg, #6121ff, #7e03aa, #937cff);
  --border-width: 0.125em;
  --curve-size: 0.5em;
  --bg: #080312;
  --color: #afffff;
  --background: #080312; /* Defina a variável aqui */
}


/* Botão Animado */
.btn {
  color: var(--color);
  position: relative;
  display: flex;
  place-content: center;
  padding: 0.8em 1.5em;
  font-size: 17px;
  border: 0;
  text-transform: uppercase;
  box-shadow: 10px 10px 20px rgba(0, 0, 0, 0.6);
  clip-path: polygon(
    0% var(--curve-size),
    var(--curve-size) 0,
    100% 0,
    100% calc(100% - var(--curve-size)),
    calc(100% - var(--curve-size)) 100%,
    0 100%
  );
  transition: color 250ms;
}

.btn::after,
.btn::before {
  content: "";
  position: absolute;
  inset: 0;
}

.btn::before {
  background: var(--border-color);
  background-size: 300% 300%;
  animation: move-bg 5s ease infinite;
  z-index: -2;
}

@keyframes move-bg {
  0% {
    background-position: 31% 0%;
  }
  50% {
    background-position: 70% 100%;
  }
  100% {
    background-position: 31% 0%;
  }
}

.btn::after {
  background: var(--bg);
  z-index: -1;
  clip-path: polygon(
    var(--border-width) calc(var(--curve-size) + var(--border-width) * 0.5),
    calc(var(--curve-size) + var(--border-width) * 0.5) var(--border-width),
    calc(100% - var(--border-width)) var(--border-width),
    calc(100% - var(--border-width)) calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5)),
    calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5)) calc(100% - var(--border-width)),
    var(--border-width) calc(100% - var(--border-width))
  );
  transition: clip-path 500ms;
}

.btn:hover::after,
.btn:focus::after {
  clip-path: polygon(
    calc(100% - var(--border-width)) calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5)),
    calc(100% - var(--border-width)) var(--border-width),
    calc(100% - var(--border-width)) var(--border-width),
    calc(100% - var(--border-width)) calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5)),
    calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5)) calc(100% - var(--border-width)),
    calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5)) calc(100% - var(--border-width))
  );
  transition: 200ms;
}

.btn:hover,
.btn:focus {
  color: #fff;
}

/* Luz Animada */
.animated-light {
  position: relative;
}

.animated-light::before,
.animated-light::after {
  content: "";
  position: absolute;
  border-radius: 100%;
  filter: blur(150px);
  opacity: 0.3;
  mix-blend-mode: screen;
  pointer-events: none;
  animation: luz 5s infinite;
}

.animated-light::before {
  top: 15%;
  right: calc(50% - 800px);
  width: 500px;
  height: 600px;
  background: #d5d1ff;
}

.animated-light::after {
  top: 60%;
  right: calc(50% - 400px);
  width: 10000px;
  height: 300px;
  background: #937cff;
  animation-delay: 2s;
}

@keyframes luz {
  0%, 100% {
    opacity: 0;
  }
  50% {
    opacity: 0.5;
  }
}

/* Cartões com Borda */
.card {
  z-index: 1;
  border-radius: 5px;
  position: relative;
}

.card:before {
  content: "";
  position: absolute;
  z-index: 2;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 1px;
  background: linear-gradient(to top, transparent, #6121ff);
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  border-radius: 10px;
  pointer-events: none;
}

/* Ícone do Card */
.card img {
  width: 80px;
  height: 80px;  
  z-index: 3;
  background: linear-gradient(to top, #000405, #210471);
  border: 1px solid #6121ff;
  border-radius: 60%;
  box-shadow: 0 10px 10px #000;
  position: absolute;
  top: -50px;
  transform: translate(-50%);
}

/* Altura da Caixa do Card */
.card .elementor-image-box-wrapper {
  border-radius: 5px;
  min-height: 230px;
}

/* card 2 */
.card2 {
  z-index: 1;
}

.card2:before {
    content: "";
    position: absolute;
    z-index: 10;
    border-radius: 15px; /* Arredondamento das bordas do pseudo-elemento */
    margin: 0px;
    margin-top: 0px;
    pointer-events: none;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    padding: 2px; /* Espaçamento interno do pseudo-elemento */
    background: linear-gradient(-35deg, #6121ff, transparent, transparent, #6121ff); /* Gradiente linear com cor e transparência */
    -webkit-mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0); /* Máscaras para efeitos visuais em navegadores WebKit */
    mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0); /* Máscaras para efeitos visuais em outros navegadores */
    -webkit-mask-composite: xor; /* Efeito de corte na máscara para WebKit */
    mask-composite: exclude; /* Efeito de corte na máscara para outros navegadores */
}

/* CSS customizado*/

/* Define a largura da barra de rolagem */
::-webkit-scrollbar {
  width: auto; /* Largura da barra de rolagem */
  height: auto; /* Altura da barra de rolagem, caso você queira personalizar a rolagem horizontal também */
}

/* Define a cor de fundo da trilha da barra de rolagem com um gradiente */
::-webkit-scrollbar-track {
  background: linear-gradient(to bottom, #000000, #2f2f2f, #000000); /* Gradiente de preto para cinza escuro e volta para preto */
  border-radius: 10px; /* Arredondamento das bordas da trilha */
}

/* Define a aparência da parte "pegajosa" da barra de rolagem (a barrinha) */
::-webkit-scrollbar-thumb {
  background-color: #6121ff; /* Cor da barrinha (polegar) */
  border-radius: 10px; /* Arredondamento das bordas da barrinha */
}

/* Define a aparência quando o polegar da barra de rolagem é ativado (hover) */
::-webkit-scrollbar-thumb:hover {
  background-color: #1e0c8f; /* Cor da barrinha quando em hover */
}

/* Para navegadores Firefox */
* {
  /* Barra de rolagem com tamanho normal */
  scrollbar-color: #6121ff black; /* Cor do thumb e da trilha (com o gradiente no Chrome/Edge/Safari) */
}
